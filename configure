#!/bin/sh

: ${CC:=cc}
: ${GLSLANG:=glslangValidator}
: ${PKG_CONFIG:=pkg-config}

fail() {
	echo "$0: $*" >&2
	exit 1
}

IFS=' ,'
PLATFORMS=auto
BACKENDS=auto
DEPS='pixman-1'

for arg; do
	case "$arg" in
	--with-platforms=*) PLATFORMS=${arg#*=} ;;
	--with-backends=*) BACKENDS=${arg#*=} ;;
	CC=*) CC=${arg#*=} ;;
	CFLAGS=*) CFLAGS=${arg#*=} ;;
	LDFLAGS=*) LDFLAGS=${arg#*=} ;;
	LDLIBS=*) LDLIBS=${arg#*=} ;;
	*) fail "unknown option '$arg'"
	esac
done

# platform detection
WITH_WAYLAND=n
WITH_X11=n

if [ "$PLATFORMS" = auto ]; then
	PLATFORMS=
	$PKG_CONFIG --exists xcb && PLATFORMS="$PLATFORMS x11"
	$PKG_CONFIG --exists wayland-client && PLATFORMS="$PLATFORMS wayland"
fi

for arg in $PLATFORMS; do
	case "$arg" in
	wayland)
		WITH_WAYLAND=y
		DEPS="$DEPS wayland-client"
	;;
	x11)
		WITH_X11=y
		DEPS="$DEPS xcb"
	;;
	*) fail "unknown platform '$arg'"
	esac
done

# backend detection
WITH_DRM_WAYLAND=n
WITH_DRM_X11=n
WITH_VULKAN=n
WITH_VULKAN_WAYLAND=n
WITH_VULKAN_X11=n

if [ "$BACKENDS" = auto ]; then
	BACKENDS=
	$PKG_CONFIG --exists vulkan && BACKENDS="$BACKENDS vulkan"
fi

for arg in $BACKENDS; do
	case "$arg" in
	vulkan)
		WITH_VULKAN=y
		DEPS="$DEPS vulkan"
		[ "$WITH_WAYLAND" = y ] && WITH_VULKAN_WAYLAND=y
		[ "$WITH_X11" = y ] && WITH_VULKAN_X11=y
	;;
	*) fail "unknown platform '$arg'"
	esac
done

printf 'creating config.mk...'
{
	echo "CC=$CC"
	echo "CFLAGS+=$CFLAGS $($PKG_CONFIG --cflags $DEPS)"
	echo "LDFLAGS+=$LDFLAGS $($PKG_CONFIG --libs-only-other $DEPS)"
	echo "GLSLANG=$GLSLANG"
	echo "WITH_X11=$WITH_X11"
	echo "WITH_WAYLAND=$WITH_WAYLAND"
	echo "WITH_VULKAN=$WITH_VULKAN"
	echo "WITH_VULKAN_WAYLAND=$WITH_VULKAN_WAYLAND"
	echo "WITH_VULKAN_X11=$WITH_VULKAN_X11"
} >config.mk
echo done
